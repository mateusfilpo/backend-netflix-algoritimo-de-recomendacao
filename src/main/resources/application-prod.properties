spring.application.name=netflix

spring.security.oauth2.resourceserver.issuer-uri=http://localhost:9000

# DATASOURCE
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/netflix
spring.datasource.username=postgres
spring.datasource.password=1234
spring.jpa.database=postgresql

# JPA, SQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.defer-datasource-initialization=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=validate

spring.sql.init.mode=never
spring.flyway.enabled=true

spring.h2.console.enabled=false

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000
cors.origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:5173}

spring.cache.cache-names=movieCache,movieListCache,movieListByGenreCache,genreCache,genreListCache,userListMovieRecommendCache

spring.datasource.hikari.pool-name=RestDB-Pool
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.useLocalSessionState=true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.cacheResultSetMetadata=true
spring.datasource.hikari.data-source-properties.cacheServerConfiguration=true
spring.datasource.hikari.data-source-properties.elideSetAutoCommits=true
spring.datasource.hikari.data-source-properties.maintainTimeStats=false

#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.jakarta.persistence.shema-generation.scripts.create-source=metadata
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.drop-target=drop-and-create.sql
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=drop-and-create.sql